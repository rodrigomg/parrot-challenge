plugins {
  id("groovy")
  id("com.github.johnrengelman.shadow") version "7.1.1"
  id("io.micronaut.application") version "3.2.2"
}

version = "0.1"
group = "mx.com.parrot"

repositories {
  mavenCentral()
}

dependencies {
  implementation("io.micronaut:micronaut-http-client")
  implementation("io.micronaut:micronaut-jackson-databind")
  implementation("io.micronaut.groovy:micronaut-runtime-groovy")
  implementation("io.micronaut.sql:micronaut-jdbc-hikari")
  implementation("jakarta.annotation:jakarta.annotation-api")
  implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
  implementation("org.zalando:problem:0.24.0")
  implementation("io.micronaut.security:micronaut-security:3.2.2")
  implementation("io.micronaut.security:micronaut-security-session:3.2.2")
  implementation("io.micronaut.security:micronaut-security-annotations: '3.2.2'")
  implementation("io.projectreactor:reactor-core:3.4.12")
  implementation("io.micronaut.openapi:micronaut-openapi:3.2.2")
  implementation("org.zalando:jackson-datatype-problem:0.24.0")
  compileOnly("io.micronaut:micronaut-http-validation")
  compileOnly("io.micronaut:micronaut-http-client")
  compileOnly("io.micronaut:micronaut-http-server-netty")
  compileOnly("io.micronaut.data:micronaut-data-processor")
  runtimeOnly("ch.qos.logback:logback-classic")
  runtimeOnly("org.postgresql:postgresql")
  testImplementation("org.testcontainers:postgresql")
  testImplementation("org.testcontainers:spock")
  testImplementation("org.testcontainers:testcontainers")
  implementation("io.micronaut:micronaut-validation")
  annotationProcessor("io.micronaut.openapi:micronaut-openapi:3.2.2")
}


application {
  mainClass.set("mx.com.parrot.Application")
}
java {
  sourceCompatibility = JavaVersion.toVersion("11")
  targetCompatibility = JavaVersion.toVersion("11")
}

graalvmNative.toolchainDetection = false
micronaut {
  runtime("netty")
  testRuntime("spock2")
  processing {
    incremental(true)
    annotations("mx.com.parrot.*")
  }
}
